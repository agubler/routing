{"version":3,"file":"createContainerMixin.js","sourceRoot":"","sources":["createContainerMixin.ts"],"names":[],"mappings":";;;;;;;;;IAEA,wCAA8E,2BAA2B,CAAC,CAAA;IAC1G,kCAA0E,qBAAqB,CAAC,CAAA;IA2BhG,IAAM,oBAAoB,GAA0B,2BAAiB;SACnE,KAAK,CAAC,iCAAuB,CAAC;SAC9B,MAAM,CAAC;QACP,gBAAgB;YACf,IAAM,SAAS,GAAoD,IAAI,CAAC;YACxE,IAAM,OAAO,GAAuB,EAAE,CAAC;YACvC,uDAAuD;YACvD,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,KAAK,IAAK,OAAA,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAA5B,CAA4B,CAAC,CAAC;YACpE,MAAM,CAAC,OAAO,CAAC;QAChB,CAAC;KACD,CAAC,CAAC;IAEJ;sBAAe,oBAAoB,CAAC","sourcesContent":["import { VNode } from 'maquette/maquette';\nimport { ComposeFactory } from 'dojo-compose/compose';\nimport createCachedRenderMixin, { CachedRenderMixin, CachedRenderState } from './createCachedRenderMixin';\nimport createParentMixin, { ParentMixinOptions, ParentMixin, Child } from './createParentMixin';\nimport { Renderable } from './createRenderable';\nimport { StatefulOptions } from './createStateful';\n\nexport interface ContainerChild extends Child {\n\tparent?: ParentMixin<this>;\n}\n\nexport interface ContainerMixinOptions<S extends ContainerMixinState> extends StatefulOptions<S>, ParentMixinOptions<ContainerChild> { }\n\nexport interface ContainerMixinState extends CachedRenderState { }\n\nexport interface ContainerMixin<C extends ContainerChild, S extends ContainerMixinState> extends CachedRenderMixin<S>, ParentMixin<C> {\n\t/**\n\t * Return an array of VNodes/strings the represent the rendered results of the children of this instance\n\t */\n\tgetChildrenNodes(): (VNode | string)[];\n}\n\nexport interface ContainerMixinFactory extends ComposeFactory<ContainerMixin<ContainerChild, ContainerMixinState>, ContainerMixinOptions<ContainerMixinState>> {\n\t/**\n\t * Create a new instance of a Container\n\t * @param options Any options to use during creation\n\t */\n\t<R extends ContainerChild>(options?: ContainerMixinOptions<ContainerMixinState>): ContainerMixin<R, ContainerMixinState>;\n}\n\nconst createContainerMixin: ContainerMixinFactory = createParentMixin\n\t.mixin(createCachedRenderMixin)\n\t.extend({\n\t\tgetChildrenNodes(): (VNode | string)[] {\n\t\t\tconst container: ContainerMixin<Renderable, ContainerMixinState> = this;\n\t\t\tconst results: (VNode | string)[] = [];\n\t\t\t/* Converting immutable lists toArray() is expensive */\n\t\t\tcontainer.children.forEach((child) => results.push(child.render()));\n\t\t\treturn results;\n\t\t}\n\t});\n\nexport default createContainerMixin;\n"]}