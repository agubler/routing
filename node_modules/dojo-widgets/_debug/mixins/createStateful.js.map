{"version":3,"file":"createStateful.js","sourceRoot":"","sources":["createStateful.ts"],"names":[],"mappings":"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","sourcesContent":["import { Observable, Subscription } from 'rxjs/Rx';\nimport compose, { ComposeFactory } from 'dojo-compose/compose';\nimport Promise from 'dojo-core/Promise';\nimport WeakMap from 'dojo-core/WeakMap';\nimport { deepAssign } from 'dojo-core/lang';\nimport { EventObject, Handle } from 'dojo-core/interfaces';\nimport createEvented, { Evented, EventedOptions, EventedListener } from './createEvented';\n\nconst stateWeakMap = new WeakMap<Stateful<any>, any>();\n\nexport interface State {\n\t[id: string]: any;\n}\n\nexport interface ObservableState<S> {\n\tobserve(id: string): Observable<S>;\n\tpatch(partial: any, options?: { id?: string }): Promise<S>;\n}\n\nexport interface StatefulOptions<S extends State> extends EventedOptions {\n\tstate?: S;\n\tid?: string;\n\tstateFrom?: ObservableState<S>;\n}\n\nexport interface StateChangeEvent<S extends State> extends EventObject {\n\ttype: string;\n\tstate: S;\n\ttarget: Stateful<S>;\n}\n\nexport interface Stateful<S extends State> extends Evented {\n\t/**\n\t * A readonly version of the state\n\t */\n\tstate: S;\n\n\t/**\n\t * Set the state on the instance.\n\t * Set state takes partial values, therefore if a key is omitted, it will not get set.\n\t * If you wish to \"clear\" a value, you should pass it as undefined.\n\t * @param value The partial state to be set\n\t */\n\tsetState(value: S): void;\n\n\t/**\n\t * Observe the state from an object that allows the observation\n\t * @param id         The ID in the target obserable to observe\n\t * @param observable The taget that returns an obserable inteface when observing an ID\n\t */\n\tobserveState(id: string, observable: ObservableState<S>): Handle;\n\n\t/**\n\t * Add a listener for the event\n\t * @param type     The event to listener for\n\t * @param listener The event listener\n\t */\n\ton(type: 'statechange', listener: EventedListener<StateChangeEvent<S>>): Handle;\n\ton(type: string, listener: EventedListener<EventObject>): Handle;\n}\n\nexport interface StatefulFactory extends ComposeFactory<Stateful<State>, StatefulOptions<State>> {\n\t<S extends State>(options?: StatefulOptions<S>): Stateful<S>;\n}\n\nfunction setStatefulState(stateful: Stateful<State>, value: State) {\n\tconst state = deepAssign(stateWeakMap.get(stateful), value);\n\tstateful.emit({\n\t\ttype: 'statechange',\n\t\tstate,\n\t\ttarget: stateful\n\t});\n\treturn state;\n}\n\ninterface ObservedState {\n\tid: string;\n\tobservable: ObservableState<State>;\n\tsubscription: Subscription;\n\thandle: Handle;\n}\n\nconst observedStateMap = new WeakMap<Stateful<State>, ObservedState>();\n\nfunction unobserve(stateful: Stateful<State>) {\n\tconst observedState = observedStateMap.get(stateful);\n\tif (observedState) {\n\t\tobservedState.handle.destroy();\n\t}\n}\n\nconst createStateful: StatefulFactory = compose({\n\t\tget state(): any {\n\t\t\treturn stateWeakMap.get(this);\n\t\t},\n\n\t\tsetState(value: State): void {\n\t\t\tconst stateful: Stateful<any> = this;\n\t\t\tconst observedState = observedStateMap.get(stateful);\n\t\t\tif (observedState) {\n\t\t\t\tobservedState.observable.patch(value, { id: observedState.id });\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsetStatefulState(stateful, value);\n\t\t\t}\n\t\t},\n\n\t\tobserveState(id: string, observable: ObservableState<State>): Handle {\n\t\t\tconst stateful: Stateful<any> = this;\n\t\t\tlet observedState = observedStateMap.get(stateful);\n\t\t\tif (observedState) {\n\t\t\t\tif (observedState.id === id && observedState.observable === observable) {\n\t\t\t\t\treturn observedState.handle;\n\t\t\t\t}\n\t\t\t\tthrow new Error('Already observing state.');\n\t\t\t}\n\t\t\tobservedState = {\n\t\t\t\tid,\n\t\t\t\tobservable,\n\t\t\t\tsubscription: observable.observe(id).subscribe((item: State) => {\n\t\t\t\t\tsetStatefulState(stateful, item);\n\t\t\t\t}, (err) => { /* error handler */\n\t\t\t\t\tstateful.emit({\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\ttarget: stateful,\n\t\t\t\t\t\terror: err\n\t\t\t\t\t});\n\t\t\t\t\tunobserve(stateful);\n\t\t\t\t}, () => { /* completed handler */\n\t\t\t\t\tunobserve(stateful);\n\t\t\t\t}),\n\t\t\t\thandle: {\n\t\t\t\t\tdestroy() {\n\t\t\t\t\t\tconst observedState = observedStateMap.get(stateful);\n\t\t\t\t\t\tif (observedState) {\n\t\t\t\t\t\t\tobservedState.subscription.unsubscribe();\n\t\t\t\t\t\t\tobservedStateMap.delete(stateful);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tobservedStateMap.set(stateful, observedState);\n\t\t\treturn observedState.handle;\n\t\t}\n\t}, (instance: any, options: StatefulOptions<State>) => {\n\t\tconst state = {};\n\t\tstateWeakMap.set(instance, state);\n\t\tif (options) {\n\t\t\tif (options.state) {\n\t\t\t\tinstance.setState(options.state);\n\t\t\t}\n\t\t\tif (options.id && options.stateFrom) {\n\t\t\t\tinstance.own(instance.observeState(options.id, options.stateFrom));\n\t\t\t}\n\t\t\telse if (options.id || options.stateFrom) {\n\t\t\t\tthrow new TypeError('Factory requires options \"id\" and \"stateFrom\" to be supplied together.');\n\t\t\t}\n\t\t}\n\t})\n\t.mixin(createEvented);\n\nexport default createStateful;\n"]}