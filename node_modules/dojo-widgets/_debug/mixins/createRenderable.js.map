{"version":3,"file":"createRenderable.js","sourceRoot":"","sources":["createRenderable.ts"],"names":[],"mappings":";;;;;;;;;IAAA,wBAAwC,sBAAsB,CAAC,CAAA;IAE/D,kCAA+C,qBAAqB,CAAC,CAAA;IA+BrE,sBAA6B,KAAU;QACtC,MAAM,CAAC,KAAK,IAAI,OAAO,KAAK,CAAC,MAAM,KAAK,UAAU,CAAC;IACpD,CAAC;IAFe,oBAAY,eAE3B,CAAA;IAED,IAAM,gBAAgB,GAAsB,iBAAO,CAAyB;QAC1E,MAAM,EAAmB,IAAI;QAE7B,OAAO,EAAE,KAAK;KACd,EAAE,UAAC,QAAQ,EAAE,OAAO;QACpB,EAAE,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;YAChC,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;QACpC,CAAC;IACF,CAAC,CAAC;SACD,KAAK,CAAC;QACN,KAAK,EAAE,2BAAiB;QACxB,UAAU,YAAC,QAAoB,EAAE,OAA0B;YAC1D,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACb,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;oBACpB,QAAQ,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;gBAClC,CAAC;gBACD,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;oBACrB,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;gBACpC,CAAC;gBACD,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;oBACpB,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBACjC,CAAC;YACF,CAAC;QACF,CAAC;KACD,CAAC,CAAC;IAEJ;sBAAe,gBAAgB,CAAC","sourcesContent":["import compose, { ComposeFactory } from 'dojo-compose/compose';\nimport { VNode } from 'maquette/maquette';\nimport createDestroyable, { Destroyable } from './createDestroyable';\nimport { ParentMixin } from './createParentMixin';\n\nexport interface RenderFunction {\n\t(): VNode;\n}\n\nexport interface RenderableOptions {\n\t/**\n\t * A render function to be used.\n\t */\n\trender?: RenderFunction;\n\n\ttagName?: string;\n\n\tparent?: ParentMixin<any>;\n}\n\nexport interface Renderable extends Destroyable {\n\t/**\n\t * Takes no arguments and returns a VNode\n\t */\n\trender(): VNode;\n\n\ttagName: string;\n\n\tparent?: ParentMixin<this>;\n}\n\nexport interface RenderableFactory extends ComposeFactory<Renderable, RenderableOptions> { }\n\nexport function isRenderable(value: any): value is Renderable {\n\treturn value && typeof value.render === 'function';\n}\n\nconst createRenderable: RenderableFactory = compose<any, RenderableOptions>({\n\t\trender: <RenderFunction> null,\n\n\t\ttagName: 'div'\n\t}, (instance, options) => {\n\t\tif (options && options.tagName) {\n\t\t\tinstance.tagName = options.tagName;\n\t\t}\n\t})\n\t.mixin({\n\t\tmixin: createDestroyable,\n\t\tinitialize(instance: Renderable, options: RenderableOptions) {\n\t\t\tif (options) {\n\t\t\t\tif (options.render) {\n\t\t\t\t\tinstance.render = options.render;\n\t\t\t\t}\n\t\t\t\tif (options.tagName) {\n\t\t\t\t\tinstance.tagName = options.tagName;\n\t\t\t\t}\n\t\t\t\tif (options.parent) {\n\t\t\t\t\toptions.parent.append(instance);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\nexport default createRenderable;\n"]}