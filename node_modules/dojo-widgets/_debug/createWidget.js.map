{"version":3,"file":"createWidget.js","sourceRoot":"","sources":["createWidget.ts"],"names":[],"mappings":";;;;;;;;;IAEA,wCAAkG,kCAAkC,CAAC,CAAA;IACrI,kCAA+C,4BAA4B,CAAC,CAAA;IAC5E,8BAAwE,wBAAwB,CAAC,CAAA;IACjG,iCAAgE,2BAA2B,CAAC,CAAA;IAC5F,+BAA4E,yBAAyB,CAAC,CAAA;IACtG,mCAAiD,6BAA6B,CAAC,CAAA;IAiB/E,IAAM,YAAY,GAAkB,wBAAc;SAChD,KAAK,CAAC,2BAAiB,CAAC;SACxB,KAAK,CAAC,uBAAa,CAAC;SACpB,KAAK,CAAC,0BAAgB,CAAC;SACvB,KAAK,CAAC,4BAAkB,CAAC;SACzB,KAAK,CAAC,iCAAuB,CAAC,CAAC;IAEjC;sBAAe,YAAY,CAAC","sourcesContent":["import { ComposeFactory } from 'dojo-compose/compose';\nimport { EventObject, Handle } from 'dojo-core/interfaces';\nimport createCachedRenderMixin, { CachedRenderMixin, CachedRenderState, CachedRenderParent } from './mixins/createCachedRenderMixin';\nimport createDestroyable, { Destroyable } from './mixins/createDestroyable';\nimport createEvented, { Evented, EventedOptions, EventedListener } from './mixins/createEvented';\nimport createRenderable, { Renderable, RenderableOptions } from './mixins/createRenderable';\nimport createStateful, { Stateful, StatefulOptions, StateChangeEvent } from './mixins/createStateful';\nimport createVNodeEvented, { VNodeEvented } from './mixins/createVNodeEvented';\n\nexport interface WidgetState extends CachedRenderState { }\n\nexport interface WidgetOptions<S extends WidgetState> extends StatefulOptions<S>, EventedOptions, RenderableOptions { }\n\nexport interface Widget<S extends WidgetState> extends Stateful<S>, Destroyable, Evented, Renderable, VNodeEvented, CachedRenderMixin<S> {\n\tparent?: CachedRenderParent;\n\n\ton(type: 'statechange', listener: EventedListener<StateChangeEvent<S>>): Handle;\n\ton(type: string, listener: EventedListener<EventObject>): Handle;\n}\n\nexport interface WidgetFactory extends ComposeFactory<Widget<WidgetState>, WidgetOptions<WidgetState>> {\n\t<S extends WidgetState>(options?: WidgetOptions<S>): Widget<S>;\n}\n\nconst createWidget: WidgetFactory = createStateful\n\t.mixin(createDestroyable)\n\t.mixin(createEvented)\n\t.mixin(createRenderable)\n\t.mixin(createVNodeEvented)\n\t.mixin(createCachedRenderMixin);\n\nexport default createWidget;\n"]}